name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1-5'

env:
  GOPROXY:  "https://proxy.golang.org"
  TAGS:     "-tags travis"
  COVERAGE: "-cover"

jobs:

  build:
    name: Build
    strategy:
      matrix:
        go-version: [1.24.x, 1.23.x]
        platform: [ubuntu-latest]
        #platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache-Go
      uses: actions/cache@v4
      with:
        # In order:
        # * Module download cache
        # * Build cache (Linux)
        # * Build cache (Mac)
        # * Build cache (Windows)
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
          ~/Library/Caches/go-build
          '%LocalAppData%\go-build'
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Linux packages
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo apt-get install -qq pkg-config fuse

    - name: Build-Linux-32b
      if: matrix.platform == 'ubuntu-latest'
      run: |
        GOARCH=386   go install -v $TAGS ./...
    - name: Build-Linux-64b
      if: matrix.platform == 'ubuntu-latest'
      run: |
        GOARCH=amd64 go install -v $TAGS ./...
    - name: Test Linux
      if: matrix.platform == 'ubuntu-latest'
      run: |
        go run ./ci/run-tests.go $TAGS $COVERAGE
    - name: static-check
      uses: dominikh/staticcheck-action@v1
      with:
        install-go: false
        cache-key: ${{ matrix.platform }}
        version: "2024.1"
    - name: Upload-Coverage
      if: matrix.platform == 'ubuntu-latest'
      uses: codecov/codecov-action@v3
